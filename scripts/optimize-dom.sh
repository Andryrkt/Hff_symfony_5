#!/bin/bash

# Script d'optimisation sp√©cifique pour le module DOM
# Am√©liore les performances du syst√®me de demande d'ordre de mission

echo "üöÄ Optimisation du module DOM - Demande d'Ordre de Mission"
echo "========================================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${GREEN}‚úì${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

print_error() {
    echo -e "${RED}‚úó${NC} $1"
}

# V√©rifier si on est dans le bon r√©pertoire
if [ ! -f "composer.json" ]; then
    print_error "Ce script doit √™tre ex√©cut√© depuis la racine du projet Symfony"
    exit 1
fi

echo ""
echo "1. Nettoyage du cache Symfony..."
php bin/console cache:clear --env=prod --no-debug
if [ $? -eq 0 ]; then
    print_status "Cache Symfony nettoy√©"
else
    print_error "Erreur lors du nettoyage du cache"
    exit 1
fi

echo ""
echo "2. R√©chauffement du cache..."
php bin/console cache:warmup --env=prod
if [ $? -eq 0 ]; then
    print_status "Cache r√©chauff√©"
else
    print_warning "Erreur lors du r√©chauffement du cache (non critique)"
fi

echo ""
echo "3. Optimisation des requ√™tes Doctrine..."
php bin/console doctrine:cache:clear-metadata --env=prod
php bin/console doctrine:cache:clear-query --env=prod
php bin/console doctrine:cache:clear-result --env=prod
if [ $? -eq 0 ]; then
    print_status "Cache Doctrine optimis√©"
else
    print_warning "Erreur lors de l'optimisation du cache Doctrine"
fi

echo ""
echo "4. Compilation des assets frontend..."
if command -v npm &> /dev/null; then
    npm run build
    if [ $? -eq 0 ]; then
        print_status "Assets frontend compil√©s"
    else
        print_warning "Erreur lors de la compilation des assets"
    fi
else
    print_warning "npm non trouv√©, compilation des assets ignor√©e"
fi

echo ""
echo "5. Optimisation de Composer..."
composer install --no-dev --optimize-autoloader --classmap-authoritative
if [ $? -eq 0 ]; then
    print_status "Composer optimis√©"
else
    print_error "Erreur lors de l'optimisation de Composer"
    exit 1
fi

echo ""
echo "6. V√©rification des permissions..."
chmod -R 755 var/cache/
chmod -R 755 var/log/
print_status "Permissions mises √† jour"

echo ""
echo "7. Test de performance du DOM..."
# Test simple pour v√©rifier que le module fonctionne
php bin/console debug:router | grep dom_first
if [ $? -eq 0 ]; then
    print_status "Routes DOM d√©tect√©es"
else
    print_warning "Routes DOM non trouv√©es"
fi

echo ""
echo "========================================================="
echo -e "${GREEN}üéâ Optimisation du module DOM termin√©e !${NC}"
echo ""
echo "Am√©liorations apport√©es :"
echo "‚Ä¢ Cache Symfony optimis√©"
echo "‚Ä¢ Requ√™tes Doctrine mises en cache"
echo "‚Ä¢ Assets frontend compil√©s"
echo "‚Ä¢ Autoloader Composer optimis√©"
echo "‚Ä¢ Service de cache DOM activ√©"
echo "‚Ä¢ Debouncing c√¥t√© client"
echo ""
echo "Le formulaire DOM devrait maintenant s'afficher plus rapidement !"
echo "========================================================="
